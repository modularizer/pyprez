if(!window.pyprezInitStarted){console.log("loaded pyprez.js from",location.href);var pyprezInitStarted=true;var preferredPyPrezImportSrc="https://modularizer.github.io/pyprez/pyprz.min.js";var githublinkImage='<a href="https://modularizer.github.io/pyprez"><img src="https://github.com/favicon.ico" height="15px"/></a>';var stackMode=false;var pyprezScript=document.currentScript;let boolConfig={help:true,useWorker:false,convert:true};let strConfig={codemirrorCDN:"https://cdnjs.cloudflare.com/ajax/libs/codemirror/6.65.7/",pyodideCDN:"https://cdn.jsdelivr.net/pyodide/v0.20.0/full/pyodide.js",consolePrompt:">>> ",consoleOut:"[Out] ",consoleEscape:"..."};var pyprezConfig={...boolConfig,...strConfig};for(let k of Object.keys(pyprezConfig)){if(window[k]!==undefined){pyprezConfig[k]=window[k]}}for(let k of Object.keys(pyprezConfig)){if(pyprezScript.hasAttribute(k)){let v=pyprezScript.getAttribute(k).toLowerCase();if(Object.keys(boolConfig).includes(k)){if(["true","1",""].includes(v)){pyprezConfig[k]=true}else if(["false","0"].includes(v)){pyprezConfig[k]=false}else{console.error(`Invalid value '${v}' for attribute '${k}'. Value must be "true", "false", "1", "0", or ""`)}}else{pyprezConfig[k]=v}}}Object.assign(window,pyprezConfig);class DeferredPromise{constructor(){this.promise=new Promise((resolve,reject)=>{this.resolve=resolve.bind();this.reject=reject.bind()});this.then=this.promise.then.bind(this.promise);this.catch=this.promise.catch.bind(this.promise)}}window.DeferredPromise=DeferredPromise;var domContentLoaded=new DeferredPromise;var pyodideImported=new DeferredPromise;var codemirrorImported=new DeferredPromise;var workerReady=new DeferredPromise;var pyodidePromise=new DeferredPromise("pyodidePromise");var loadedCodeMirrorStyles=["default"];if(document.readyState==="complete"||document.readyState==="loaded"){domContentLoaded.resolve()}else{document.addEventListener("DOMContentLoaded",domContentLoaded.resolve)}function pyprezConvert(){if(pyprezScript.innerHTML){if(convert){let script=pyprezScript;let ih=script.innerHTML;script.innerHTML="";let mode="editor";if(script.hasAttribute("mode")){mode=script.getAttribute("mode")}let el=document.createElement("pyprez-"+mode);el.innerHTML=ih;for(let k of script.getAttributeNames()){if(!["src"].includes(k)){el.setAttribute(k,script.getAttribute(k))}}let div=document.createElement("div");div.append(el);script.after(div)}}else{domContentLoaded.then(()=>{console.log("DOMContentLoaded");let isFirstScript=pyprezScript===document.scripts[0];let numBodyEls=document.body.children.length;let singleBodyChild=numBodyEls===1&&document.body.children[0].tagName==="SCRIPT";let twoDirectBodyChildren=numBodyEls===2&&pyprezScript.parentElement===document.body;let solo=isFirstScript&&(twoDirectBodyChildren||singleBodyChild);let convertScript=pyprezScript.hasAttribute("convert")?pyprezScript.getAttribute("convert")==="true":convert;if(solo&&convertScript){window.stackMode=true;let mode=pyprezScript.hasAttribute("mode")?pyprezScript.getAttribute("mode"):"editor";let specialAttributes={runonload:"true",theme:"default",githublink:"true"};let a="";for(let[k,defaultValue]of Object.entries(specialAttributes)){let v=pyprezScript.hasAttribute(k)?pyprezScript.getAttribute(k):defaultValue;a+=` ${k}="${v}"`}let lastScript=document.scripts[document.scripts.length-1];let demoCode=lastScript.innerHTML.trim();let stackEditor=document.createElement("div");document.body.appendChild(stackEditor);stackEditor.innerHTML=`
                        <pyprez-${mode} ${a}>${demoCode}</pyprez-${mode}>
                    `}})}}pyprezConvert();function addStyle(s){let style=document.createElement("style");style.innerHTML=s;document.head.appendChild(style)}function importScript(url){let el=document.createElement("script");el.src=url;return new Promise((resolve,reject)=>{domContentLoaded.then(()=>{console.log("attempting to import ",url);document.body.appendChild(el);el.addEventListener("load",()=>resolve(url))})})}function get(src){return fetch(src).then(r=>r.text())}function importStyle(url){console.log("importing",url);return get(url).then(addStyle)}function importPyodide(){if(pyodideCDN&&!useWorker&&window.importPyodide&&!window.pyodide){importScript(pyodideCDN).then(()=>{pyodideImported.resolve(true)})}}function importCodeMirror(){if(codemirrorCDN&&!window.CodeMirror){importScript(codemirrorCDN+"codemirror.min.js").then(()=>{importScript(codemirrorCDN+"mode/python/python.min.js").then(()=>{importStyle(codemirrorCDN+"codemirror.min.css").then(()=>{addStyle(".CodeMirror { border: 1px solid #eee !important; height: auto !important;}");codemirrorImported.resolve(CodeMirror)})})})}}importPyodide();importCodeMirror();class PyodideWorker extends Worker{constructor(src){super(src);this.parent=window;this.getMethod=this.getMethod.bind(this);this.postResponse=this.postResponse.bind(this);this.postError=this.postError.bind(this);this.postRequest=this.postRequest.bind(this);this.postCall=this.postCall.bind(this);this.receiveResponse=this.receiveResponse.bind(this);this.receiveCallRequest=this.receiveCallRequest.bind(this);this.receiveRequest=this.receiveRequest.bind(this);this.stdout=this.stdout.bind(this);this.stderr=this.stderr.bind(this);this.worker=this;this.proxy=new Proxy(this,{get(target,prop,receiver){if(target[prop]!==undefined){return target[prop]}function callMethod(){return target.postRequest(prop,Array.from(arguments))}return callMethod}});return this.proxy}loadPackagesFromImports(){}_id=0;get id(){let id=this._id;this._id=(id+1)%Number.MAX_SAFE_INTEGER;return id}pendingRequests={};receivemessage(event){let data=event.data;let type=data.type;if(type==="response"){this.receiveResponse(data)}else if(type==="call"){this.receiveCallRequest(data)}else if(type==="request"){this.receiveRequest(data)}else{this.postError(data,"unrecognized type")}}getMethod(methodName,scopes){if(!scopes){scopes=[this.parent,this]}for(let scope of scopes){if(scope[methodName]){return scope[methodName]}else if(methodName.includes(".")){let methodNames=methodName.split(".");for(let mn of methodNames){scope=scope[mn];if(!scope){return scope}}return scope}}}postResponse(data,results,error=null){data.type="response";data.results=results;data.error=error;this.postMessage(data)}postError(data,error){this.postResponse(data,null,error)}postRequest(method,args,type="request"){let id=this.id;let data={id:id,type:type,method:method,args:args,results:null,error:null};this.pendingRequests[id]=[new DeferredPromise,data];this.postMessage(data);return this.pendingRequests[id][0]}postCall(method,args){this.postRequest(method,args,"call")}receiveResponse(data){if(this.pendingRequests[data.id]===undefined){console.error(data.id,data,this,this.pendingRequests);return}let[deferredPromise,sentData]=this.pendingRequests[data.id];delete this.pendingRequests[data.id];if(data.results){deferredPromise.resolve(data.results)}else{deferredPromise.reject(data.error)}}receiveCallRequest(data){let f=this.getMethod(data.method);if(f){return f(...data.args)}else{this.postError(data,"method not found")}}receiveRequest(data){try{let results=this.receiveCallRequest(data);if(results.then){results.then(r=>this.postResponse(data,r)).catch(e=>this.postError(data,e))}else{this.postResponse(data,results)}}catch(error){this.postError(data,error)}}stdout(...args){console.log(args)}stderr(...args){console.log(args)}stdin(){return""}}function loadPyodideInterface(config){if(useWorker){window.pyodide=new PyodideWorker("./webworker.js");pyodide.worker.onmessage=pyodide.worker.receivemessage;if(config.stdin){pyodide.stdin=config.stdin}if(config.stdout){pyodide.stdout=config.stdout}if(config.stderr){pyodide.stderr=config.stderr}pyodideImported.resolve(true);workerReady.then(()=>{pyodide.runPythonAsync("2+2").then(r=>{if(r==4){console.error(pyodide);window.pyodide=pyodide;console.warn(window.pyodidePromise);window.pyodidePromise.resolve(true)}})})}else{pyodideImported.then(()=>{loadPyodide(config).then(pyodide=>{pyodide.runPythonAsync(`
                        from js import prompt
                        __builtins__.input = prompt
                        2+2
                    `).then(r=>{if(r==4){window.pyodide=pyodide;pyodidePromise.resolve(true)}})})})}return pyodidePromise}class PyPrez{constructor(config={},load=true){this._stdout=this._stdout.bind(this);this._stderr=this._stderr.bind(this);this._stdin=this._stdin.bind(this);this.load=this.load.bind(this);this.loadPyodideInterface=this.loadPyodideInterface.bind(this);this.load=this.load.bind(this);this._runPythonAsync=this._runPythonAsync.bind(this);this.loadAndRunAsync=this.loadAndRunAsync.bind(this);this.register=this.register.bind(this);Object.assign(this,config);this.config={stdout:this._stdout,stderr:this._stderr,stdin:this._stdin};if(load){this.loadPyodideInterface()}}loadPyodideInterface(){loadPyodideInterface(this.config)}pending=[];then(successCb,errorCb){return pyodidePromise.then(successCb,errorCb)}catch(errorCb){return pyodidePromise.catch(errorCB)}stdout=console.log;stderr=console.error;stdin=()=>"";_stdout(...args){return this.stdout(...args)}_stderr(...args){return this.stderr(...args)}_stdin(...args){return this.stdin(...args)}elements={};editors={};consoles={};scripts={};imports={};overflows={};register(el){let mode=el.tagName.toLowerCase().split("-").pop();let m=this[mode+"s"];this.elements[Object.keys(this.elements).length]=el;m[Object.keys(m).length]=el;if(el.id){this.elements[el.id]=el;m[el.id]=el}}_runPythonAsync(code){if(code){console.debug("running code asynchronously:");console.debug(code);return pyodide.runPythonAsync(code).catch(this.stderr)}}load(code,requirements="detect"){return this.then(()=>{let requirementsLoaded;if(requirements==="detect"){if(code){console.debug("auto loading packages detected in code");console.debug(code);requirementsLoaded=window.pyodide.loadPackagesFromImports(code)}}else{console.debug("loading",requirements);requirementsLoaded=window.pyodide.loadPackage(requirements)}return requirementsLoaded})}loadAndRunAsync(code,requirements="detect"){console.warn(pyodidePromise);let p=this.then((()=>{console.error("here");if(code){return this.load(code,requirements).then((r=>this._runPythonAsync(code)).bind(this)).catch((e=>this._runPythonAsync(code)).bind(this))}}).bind(this));return p}}var pyprez=new PyPrez(load=true);class PyPrezEditor extends HTMLElement{constructor(){super();this.classList.add("pyprez");this.loadEl=this.loadEl.bind(this);this.loadEditor=this.loadEditor.bind(this);this.keypressed=this.keypressed.bind(this);this.run=this.run.bind(this);let language=this.hasAttribute("language")?this.getAttribute("language").toLowerCase():"python";let aliases={python:"python",javascript:"javascript",html:"html",py:"python",js:"javascript"};this.language=aliases[language];if(!this.hasAttribute("stdout")){this.setAttribute("stdout","true")}if(this.hasAttribute("src")&&this.getAttribute("src")&&this.getAttribute("src")!==pyprezScript.src){let src=this.getAttribute("src");console.debug("fetching script for pyprez-editor src",src);if(src.endsWith(".js")){this.language="javascript"}else if(src.endsWith(".py")){this.language="python"}else if(src.endsWith(".html")){this.language="html"}fetch(src).then(r=>r.text()).then(code=>{console.warn("got",code);this.innerHTML=code;this.loadEl()})}else{this.loadEl()}this.addEventListener("keydown",this.keypressed.bind(this));this.addEventListener("dblclick",this.dblclicked.bind(this));pyprez.register(this);if(this.hasAttribute("runonload")&this.getAttribute("runonload")==="true"){this.run()}}unindent(code,minIndent=0){let firstFound=false;let lines=code.replaceAll("\t","    ").split("\n").filter((v,i)=>{if(firstFound){return true}firstFound=v.trim().length>0;return firstFound});let nonemptylines=lines.filter(v=>v.trim().length);let leadingSpacesPerLine=nonemptylines.filter(v=>!v.trim().startsWith("#")).map(v=>v.match(/\s*/)[0].length);let extraLeadingSpaces=Math.min(...leadingSpacesPerLine)-minIndent;let extraIndent=" ".repeat(extraLeadingSpaces);code=lines.map(v=>v.startsWith(extraIndent)?v.replace(extraIndent,""):v).join("\n");return code}reformatIndentation(code){while(code.endsWith(">")){let newCode=code.replace(/<\/[a-z-]*>$/,"");if(newCode===code){break}code=newCode}code=this.unindent(code);let inem='\nif __name__=="__main__":';let blocks=code.split(inem);if(blocks.length==2){let[pre,post]=blocks;post=this.unindent(post,4);code=pre+inem+post}return code}loadEl(){let code=this.innerHTML?this.reformatIndentation(this.innerHTML):"";this.initialCode=code;this.innerHTML=`<pre>${code}</pre>`;this.loadEditor();if(this.hasAttribute("theme")){this.theme=this.getAttribute("theme")}this.loadPackages()}loadEditor(){this._loadEditor();codemirrorImported.then(this._loadCodeMirror.bind(this))}_loadEditor(){let githublink=this.hasAttribute("githublink")?this.getAttribute("githublink")==="true":false;let gh=githublink?githublinkImage:"<div></div>";let help=this.hasAttribute("help")?this.getAttribute("help")==="true":window.help;let top="";if(help){top=`<div style="background-color:#d3d3d3;border-color:#808080;border-radius:3px;display:flex">
                    ${gh}
                    <div style="margin-left:10px;overflow:hidden;"></div>
                    <select style="order:2;margin-left:auto;background-color:#f0f0f0;border-radius:3px;">
                        <option>default</option>
                        <option style="background-color:#2b2b2b;color:#a9b7c6;">darcula</option>
                        <option style="background-color:#d7d4f0;color:#30a;">eclipse</option>
                        <option style="background-color:rgba(37,59,118,.99);color:#ff6400;">blackboard</option>
                        <option style="background-color:#d7d4f0;color:#0080ff;">xq-light</option>
                        <option style="background-color:#0a001f;color:#f8f8f8;">xq-dark</option>
                    </select>
                </div>`}else{top=`<div>
                    ${gh}
                    <div style="display:none;margin-left:10px;overflow:hidden;"></div>
                    <select style="order:2;margin-left:auto;background-color:#f0f0f0;border-radius:3px;">
                        <option>default</option>
                        <option style="background-color:#2b2b2b;color:#a9b7c6;">darcula</option>
                        <option style="background-color:#d7d4f0;color:#30a;">eclipse</option>
                        <option style="background-color:rgba(37,59,118,.99);color:#ff6400;">blackboard</option>
                        <option style="background-color:#d7d4f0;color:#0080ff;">xq-light</option>
                        <option style="background-color:#0a001f;color:#f8f8f8;">xq-dark</option>
                    </select>
                </div>`}this.style.display="flex";this.style["flex-direction"]="column";this.style.resize="both";this.style.overflow="auto";this.innerHTML=`
            <div style="color:green">${this.startChar}</div>
            ${top}
            <textarea style="height:auto;">${this.initialCode}</textarea>
            <pre></pre>
            `;this.start=this.children[0];this.messageBar=this.children[1].children[1];this.select=this.children[1].children[2];this.textarea=this.children[2];this.endSpace=this.children[3];this.start.addEventListener("click",this.startClicked.bind(this));this.select.addEventListener("change",(e=>{this.theme=this.select.value;try{localStorage.setItem("codemirrorTheme",this.select.value)}catch{}}).bind(this));this.textarea.style.height=this.textarea.scrollHeight+"px";let longestLine=this.initialCode.split("\n").map(v=>v.length).reduce((a,b)=>a>b?a:b);let fontSize=1*window.getComputedStyle(this.textarea).fontSize.slice(0,-2);let w=Math.min(window.innerWidth-50,Math.ceil(longestLine*fontSize)+200);this.style.width=stackMode?"100%":w+"px";if(!pyodideImported.promise.fullfilled){this.message="Loading pyodide";pyodideImported.then((()=>{this.message="Ready   (Double-Click to Run)"}).bind(this))}}_loadCodeMirror(){this.editor=CodeMirror.fromTextArea(this.textarea,{lineNumbers:true,mode:this.language,viewportMargin:Infinity,gutters:["Codemirror-linenumbers","start"]});this.editor.doc.setGutterMarker(0,"start",this.start);this.editor.display.lineDiv.addEventListener("dblclick",this.dblclicked.bind(this));let cmt=localStorage.getItem("codemirrorTheme");cmt=cmt?cmt:this.theme;localStorage.setItem("codemirrorTheme",cmt);this.select.value=cmt;this.theme=cmt}keypressed(e){if(e.shiftKey){if(e.key=="Enter"){this.run();e.preventDefault()}else if(e.key=="Backspace"){this.reset();e.preventDefault()}}}dblclicked(e){if(this.done){this.reload()}this.run();e.stopPropagation()}startClicked(){if(!this.executed){this.run()}else{this.reload()}}done=false;executed=false;separator="\n____________________\n";startChar="&#10148";reloadChar="&#8635";consolePrompt=consolePrompt;consoleOut=consoleOut;get message(){return this.messageBar.innerHTML}set message(v){this.messageBar.innerHTML=v}get code(){return this.editor?this.editor.getValue():this.textarea.value}set code(v){if(this.language=="html"){v=v.replaceAll("<","&lt").replaceAll(">","gt")}if(this.editor){this.editor.setValue(v);this.editor.doc.setGutterMarker(0,"start",this.start);let si=this.editor.getScrollInfo();this.editor.scrollTo(0,si.height)}else{this.textarea.value=v;this.textarea.scrollTop=this.textarea.scrollHeight}let bb=this.getBoundingClientRect();if(bb.bottom>window.innerHeight){window.scrollTo(0,bb.bottom)}}get theme(){return this.editor.options.theme}set theme(v){codemirrorImported.then((()=>{if(loadedCodeMirrorStyles.includes(v)){this.editor.setOption("theme",v)}else{let src=codemirrorCDN+"theme/"+v+".min.css";get(src).then(addStyle).then((()=>{this.editor.setOption("theme",v);loadedCodeMirrorStyles.push(v)}).bind(this))}}).bind(this))}numImports=0;loadPackages(){let code=this.code;let n=code.match(/import/g);if(n&&n.length!==this.numImports){this.message="Loading packages...";this.numImports=n.length;pyprez.load(this.code).then((()=>{this.message="Ready...(Double-Click to Run)"}).bind(this))}}reload(){this.start.innerHTML=this.startChar;this.start.style.color="green";this.code=this.executed;console.warn("Setting code to ",this.executed,this.code);this.executed=false;this.done=false}run(){console.log("run",this.done);if(this.done){this.consoleRun()}else if(this.code){this.message="Running...";let code=this.code.split(this.separator)[0];this.executed=code;this.code=code;this.start.style.color="yellow";let promise;if(this.language=="python"){this.code+=this.separator;if(this.getAttribute("stdout")==="true"){this.attachStd()}promise=pyprez.loadAndRunAsync(code);promise.then(r=>{this.done=true;this.message="Complete! (Double-Click to Re-Run)";let s="\n"+this.consoleOut+(r?r.toString():"")+"\n"+this.consolePrompt;this.code+=s;this.start.style.color="red";this.start.innerHTML=this.reloadChar;if(this.getAttribute("stdout")==="true"){this.detachStd()}return r})}else if(this.language=="javascript"){let r=eval(code);this.done=true;this.code+="\n"+this.consolePrompt+JSON.stringify(r,null,2);this.start.style.color="red";this.start.innerHTML=this.reloadChar;return r}else if(this.language=="html"){if(!this.htmlResponse){this.htmlResponse=document.createElement("div");this.after(this.htmlResponse)}this.htmlResponse.innerHTML=this.code.replaceAll("&lt","<").replaceAll("&gt",">");this.done=true}}}consoleRun(){let code=this.code.split(this.consolePrompt).pop().trim().replaceAll(this.consoleEscape,"");if(!code){this.code+="\n"+this.consolePrompt}else{if(this.language==="python"){if(this.getAttribute("stdout")==="true"){this.attachStd()}let r=pyprez.loadAndRunAsync(code).then((r=>{if(this.getAttribute("stdout")==="true"){this.detachStd()}this.printResult(r)}).bind(this));return r}else if(this.language==="javascript"){let r=eval(code);return this.printResult(r)}}}printResult(r){let res;if(this.language==="python"){if(r===null){r=""}else{res=r?r.toString():""}}else{res=JSON.stringify(r,null,2)}if(!this.code.endsWith("\n")){this.code+="\n"}this.code+=this.consoleOut+res+"\n"+this.consolePrompt;return res}appendLine(v){if(v!==null){this.code+="\n"+v}}attachStd(){this.oldstdout=pyprez.stdout;this.oldstderr=pyprez.stderr;pyprez.stdout=this.appendLine.bind(this);pyprez.stderr=this.appendLine.bind(this)}detachStd(r){if(this.oldstdout){pyprez.stdout=this.oldstdout;pyprez.stderr=this.oldstderr}return r}}window.addEventListener("load",()=>{customElements.define("pyprez-editor",PyPrezEditor)});class PyPrezImport extends HTMLElement{constructor(){super();this.classList.add("pyprez");this.style.display="none";let requirements=[...this.innerText.matchAll(this.re)].map(v=>v[1]);if(requirements.length){console.debug("importing requirements ",requirements," from <pyprez-import/>",this);pyprez.then(()=>{window.pyodide.loadPackage(requirements)}).then(()=>{console.timeEnd("pyprez-import load")})}pyprez.register(this)}re=/\s*-?\s*(.*?)\s*[==[0-9|.]*]?\s*[,|;|\n]/g}window.addEventListener("load",()=>{customElements.define("pyprez-import",PyPrezImport)});class PyPrezScript extends HTMLElement{constructor(){super();this.classList.add("pyprez");this.style.display="none";this.run=this.run.bind(this);if(this.hasAttribute("src")&&this.getAttribute("src")){console.debug("fetching script for pyprez-script src",this.getAttribute("src"));fetch(this.getAttribute("src")).then(r=>r.text()).then(this.run)}else{this.run(this.innerHTML)}pyprez.register(this)}run(code){console.debug("running code from <pyprez-script>",code,this);this.innerHTML=code;this.promise=pyprez.loadAndRunAsync(code).then(v=>{this.value=v;this.innerHTML=v?v.toString():"";return v});return this.promise}}window.addEventListener("load",()=>{customElements.define("pyprez-script",PyPrezScript)});class PyPrezConsole extends HTMLElement{constructor(){super();this.classList.add("pyprez");this.attachStd=this.attachStd.bind(this);this.detachStd=this.detachStd.bind(this);this.printResult=this.printResult.bind(this);this.eval=this.eval.bind(this);let language=this.hasAttribute("language")?this.getAttribute("language").toLowerCase():"python";let aliases={python:"python",javascript:"javascript",html:"html",py:"python",js:"javascript"};this.language=aliases[language];let cols=this.hasAttribute("cols")?this.getAttribute("cols"):this.defaultCols;let rows=this.hasAttribute("rows")?this.getAttribute("rows"):this.defaultRows;let bg=this.style["background-color"]?this.style["background-color"]:this.defaultBackgroundColor;let c=this.style["color"]?this.style["color"]:this.defaultTextColor;this.innerHTML=`<textarea cols="${cols}" rows="${rows}" style="background-color:${bg};color:${c};height:100%;"></textarea>`;this.textarea=this.children[0];let src=false;if(this.hasAttribute("src")&&this.getAttribute("src")&&this.getAttribute("src")!==pyprezScript.src){src=this.getAttribute("src");console.debug("fetching script for pyprez-editor src",src);if(src.endsWith(".js")){this.language="javascript"}else if(src.endsWith(".py")){this.language="python"}else if(src.endsWith(".html")){this.language="html"}}if(this.language==="python"){pyprez.loadAndRunAsync(`
                    import sys
                    s = f"""Python{sys.version}
                    Type "help", "copyright", "credits" or "license" for more information."""
                    s
                `).then(v=>{this.text=v+"\n"+this.consolePrompt})}else if(this.language==="javascript"){this.text+="Simple Javascript Console\n"+this.consolePrompt}if(src){this.text+="\n"+this.consolePrompt+"# importing code from "+src;fetch(src).then(r=>r.text()).then((code=>{this.text+="\n"+this.consolePrompt+"# running code from "+src;this.eval(code)}).bind(this))}this.textarea.addEventListener("keydown",this.keydown.bind(this));pyprez.register(this)}defaultCols=120;defaultRows=20;defaultBackgroundColor="#000";defaultTextColor="#fff";consolePrompt=consolePrompt;consoleOut=consoleOut;consoleEscape=consoleEscape;startup(){if(this.language==="python"){pyprez.loadAndRunAsync(`
                    import sys
                    s = f"""Python{sys.version}
                    Type "help", "copyright", "credits" or "license" for more information."""
                    s
                `).then(v=>{this.text=v+"\n"+this.consolePrompt})}else if(this.language==="javascript"){this.text+="Simple Javascript Console\n"+this.consolePrompt}}keydown(e){let k=e.key;if(k==="Tab"){this.text+="    ";e.preventDefault()}if(k==="Enter"){if(e.shiftKey||this.text.trim().endsWith(":")){this.text+="\n... ";e.preventDefault()}else{this.run();e.preventDefault()}}if(k==="Backspace"&&(this.text.endsWith(this.consolePrompt)||this.text.endsWith(this.consoleEscape+" "))){e.preventDefault()}}get text(){return this.textarea.value}set text(v){this.textarea.value=v}appendLine(v){this.text+="\n"+v}print(v){this.text+=v;this.appendLine(this.consolePrompt)}printResult(r){let res;if(this.language==="python"){res=r?r.toString():""}else{res=JSON.stringify(r,null,2)}if(!this.text.endsWith("\n")){this.text+="\n"}this.print(this.consoleOut+res);return res}attachStd(){this.oldstdout=pyprez.stdout;this.oldstderr=pyprez.stderr;pyprez.stdout=this.appendLine.bind(this);pyprez.stderr=this.appendLine.bind(this)}detachStd(r){pyprez.stdout=this.oldstdout;pyprez.stderr=this.oldstderr;return r}eval(code){if(this.language==="python"){this.attachStd();let r=pyprez.loadAndRunAsync(code).then(this.detachStd,this.detachStd).then(this.printResult);return r}else if(this.language==="javascript"){let r=eval(code);return this.printResult(r)}}run(){let code=this.text.split(this.consolePrompt).pop().trim().replaceAll(this.consoleEscape,"");if(!code){this.text+="\n"+this.consolePrompt}return this.eval(code)}}window.addEventListener("load",()=>{customElements.define("pyprez-console",PyPrezConsole)});class StackOverflow extends HTMLElement{constructor(){super();this.classList.add("pyprez");if(!this.style.display){this.style.display="flex"}this._header="Run the javascript snippet below to see a runnable Python example:";this._code="# your code here";this.innerHTML=this.getInnerHTML();pyprez.register(this)}get header(){return this._header}set header(header){this._header=header;this.innerHTML=this.getInnerHTML()}get code(){return this._code}set code(code){this._code=code;this.innerHTML=this.getInnerHTML()}getInnerHTML(){return`
    <pre style="background:#d3d3d3;border-radius:0.5em;padding:1%;margin:1%;" contenteditable="true">
        <svg
            id="copy"
            height="40px"
            width="30px"
            viewBox="0 0 22 27"
            xmlns="http://www.w3.org/2000/svg"
            style="float:right;order: 2;margin-bottom:-40px;cursor:pointer;"
            onclick="navigator.clipboard.writeText(this.parentElement.innerText)">
      <g>
        <path
           style="fill:none;stroke:#000;stroke-width:1;"
           d="M 5,22 h -1 a 2 2 0 0 1 -2 -2 v -16 a 2 2 0 0 1 2 -2 h 11 a 2 2 0 0 1 2 2 v 1"
           id="bottom" />
        <rect
           style="fill:none;stroke:#000;stroke-width:1;"
           id="top"
           width="15"
           height="20"
           x="5"
           y="5"
           rx="2" />
      </g>
    </svg>
    ${this.getRunnable()}
    </pre>
            `}getRunnable(){return`${this.header}
    &lt!-- begin snippet: js hide: false console: false babel: false --&gt

      &lt!-- language: lang-js --&gt
        # keep this comment
        ${this.code}

     &lt!-- language: lang-html --&gt

        &ltscript src=${preferredPyPrezImportSrc}&gt&lt/script&gt

    &lt!-- end snippet --&gt
    </pre>`}}window.addEventListener("load",()=>{customElements.define("stack-overflow",StackOverflow)});class StackOverflowConverter extends HTMLElement{constructor(){super();let ih=this.innerHTML;let mode=this.hasAttribute("mode")?`mode=${this.getAttribute("mode")}`:"";let src=this.hasAttribute("src")?`src=${this.getAttribute("src")}`:"";this.innerHTML=`
            <div style="display:flex">
                <div style="flex:50%">
                    <b>Edit your python snippet here...</b>
                </div>
                <div style="flex:50%">
                    <b>then copy-paste this auto-generated markdown into StackOverflow</b>
                </div>
            </div>
            <div style="display: flex">
                <div style="flex:50%">
                    <pyprez-editor ${mode} ${src}>
                        ${ih}
                    </pyprez-editor>
                </div>
                <div style="flex:50%">
                    <stack-overflow></stack-overflow>
                </div>
            </div>
            `;this.pyprezEditor=this.children[1].children[0].children[0];this.stackOverflow=this.children[1].children[1].children[0];this.sync();this.pyprezEditor.addEventListener("keydown",(()=>{setTimeout(this.sync.bind(this),10)}).bind(this))}sync(){this.stackOverflow.code=this.pyprezEditor.code}}window.addEventListener("load",()=>{customElements.define("stack-converter",StackOverflowConverter)})}else{pyprezConvert()}
